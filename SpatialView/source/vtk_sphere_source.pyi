#  Copyright (c) 2024 Feng Yang
#
#  I am making my contributions/submissions to this project solely in my
#  personal capacity and am not conveying any rights to any intellectual
#  property of any third parties.

import SpatialNode as sNode
from PySide6 import QtWidgets
from vtkmodules.vtkFiltersSources import vtkSphereSource

from SpatialView.source.vtk_sphere_source_model import VtkSphereSourceModel

class VtkSphereSource:
    def __init__(self, model: VtkSphereSourceModel):
        self._source: vtkSphereSource = None
        self._model: VtkSphereSourceModel = None

    @property
    def radius(self) -> float: ...
    @radius.setter
    def radius(self, value: float): ...
    @property
    def endPhi(self) -> float: ...
    @endPhi.setter
    def endPhi(self, value: float): ...
    @property
    def endTheta(self) -> float: ...
    @endTheta.setter
    def endTheta(self, value: float): ...
    @property
    def startPhi(self) -> float: ...
    @startPhi.setter
    def startPhi(self, value: float): ...
    @property
    def startTheta(self) -> float: ...
    @startTheta.setter
    def startTheta(self, value: float): ...
    @property
    def phiResolution(self) -> int: ...
    @phiResolution.setter
    def phiResolution(self, value: int): ...
    @property
    def thetaResolution(self) -> int: ...
    @thetaResolution.setter
    def thetaResolution(self, value: int): ...
    @property
    def center(self) -> tuple[float, float, float]: ...
    @center.setter
    def center(self, value: tuple[float, float, float]): ...
    def dialog(self) -> QtWidgets.QDialog: ...
    def outputPort(self): ...
    def load(self, p): ...
    def save(self): ...
